{"version":3,"sources":["components/ContextMenu.jsx","hooks/useContextMenu.js","constants/cache-keys.js","constants/node-styles.js","components/Node.jsx","components/TrackingBox.jsx","hooks/useMousePosition.js","components/TransitionModal.jsx","components/SideBar.jsx","components/AutomatonModal.jsx","components/ControlledSwitch.jsx","components/MultipleSelect.jsx","providers/storage-provider.js","helpers/automaton.js","pages/Graphviz.jsx","pages/Playground.jsx","App.jsx","index.js"],"names":["contextMenuStyles","cursor","display","width","height","justifyContent","alignItems","ContextMenu","props","useState","contextMenu","setContextMenu","e","preventDefault","stopPropagation","mouseX","clientX","mouseY","clientY","useContextMenu","handleContextMenu","handleClose","Box","sx","onContextMenu","children","Menu","open","onClose","anchorReference","anchorPosition","top","left","undefined","contextMenuItems","map","item","index","MenuItem","onMouseDown","handleClick","text","CACHE_KEYS","regularNodeStyles","borderRadius","borderColor","border","boxSizing","backgroundColor","acceptingNodeStyles","entryNodeStyles","flexDirection","invisibleNodeStyles","margin","selfNode","Node","nodeRef","useRef","updateXarrow","useXarrow","bounds","position","node","onStop","data","updateNode","x","y","onDrag","onClick","isStarting","ref","padding","id","label","isAccepting","Typography","TrackingBox","mainCursor","mouse","setPosition","useEffect","setFromEvent","window","addEventListener","removeEventListener","useMousePosition","boxStyles","transform","TransitionModal","input","setInput","transition","Backdrop","showModal","Dialog","DialogTitle","DialogContent","DialogContentText","start","end","values","alphabet","onChange","DialogActions","Button","onSubmit","value","labels","bgcolor","join","SideBar","CssBaseline","AppBar","drawerWidth","mr","Toolbar","variant","noWrap","component","title","flexGrow","Drawer","flexShrink","anchor","Divider","List","ListItem","ListItemIcon","ListItemText","primary","ListItemButton","handlePrettify","type","AutomatonModal","React","mode","setMode","setAlphabet","nodeCount","setNodeCount","transitionCount","setTransitionCount","setType","handleTypeChange","checked","DesignMode","TextField","helperText","onInput","target","leftText","rightText","GenerateMode","Stack","direction","spacing","parseInt","Tabs","event","newValue","Tab","split","ControlledSwitch","setChecked","Switch","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","useTheme","setValue","FormControl","m","InputLabel","Select","labelId","multiple","OutlinedInput","v","StorageProvider","setItem","key","local","preparedItem","JSON","stringify","sessionStorage","localStorage","getItem","parse","removeItem","generateAutomatonSchematic","nodes","n","state","GraphVisualisation","generateTransitionString","Graphviz","dot","acceptingStates","dotString","transitions","console","log","generateDotString","playgroundStyles","minWidth","arrowStyles","color","strokeWidth","path","Playground","setNodes","setTransitions","newTransition","setNewTransition","showTransitionModal","setShowTransitionModal","automaton","setAutomaton","showAutomatonModal","setShowAutomatonModal","prettify","setPrettify","generateAutomaton","automatonDetails","schematic","finalCount","unusedNodes","Array","keys","currentNode","shift","length","randomStateIndex","Math","floor","random","randomSymbolIndex","endState","splice","transitionSymbol","currentStateIndex","findIndex","s","allNodes","i","j","symbol","generateDFA","excludedKeys","push","Object","hasOwnProperty","call","includes","element","isDuplicate","updatedTransitions","flatMap","t","parseAutomatonSchematic","addFirstNode","newNodes","Grid","nodeGrid","nodeContextMenuItems","tempTransition","prevState","startAddingTransition","oldNode","filter","newTransitions","deleteNode","originalTransitions","updatedTransition","handleNodeClick","transitionGrid","curveness","endAnchor","startAnchor","showHead","searching","newLabel","newNode","addNodeManually","Container","oldT","newT","oldTransition","duplicate","updateTransition","deleteTransition","appStyles","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93dd9fda.chunk.js","sourcesContent":["import React from 'react';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport { useContextMenu } from '../hooks';\nimport { Menu } from '@mui/material';\nimport { Box } from '@mui/system';\n\nconst contextMenuStyles = {\n  cursor: 'context-menu',\n  display: 'flex',\n  width: '100%',\n  height: '100%',\n  justifyContent: 'center',\n  alignItems: 'center',\n};\n\nexport const ContextMenu = (props) => {\n  const [contextMenu, handleContextMenu, handleClose] = useContextMenu();\n\n  return (\n    <Box sx={contextMenuStyles} onContextMenu={handleContextMenu}>\n      {props.children}\n\n      <Menu\n        open={contextMenu !== null}\n        onClose={handleClose}\n        anchorReference='anchorPosition'\n        anchorPosition={\n          contextMenu !== null\n            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n            : undefined\n        }\n      >\n        {props.contextMenuItems?.map((item, index) => (\n          <MenuItem\n            key={`menuItem-${index}`}\n            onMouseDown={(e) => {\n              item.handleClick(e);\n              handleClose();\n            }}\n          >\n            {item.text}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Box>\n  );\n};\n","import { useState } from 'react';\n\nexport const useContextMenu = () => {\n  const [contextMenu, setContextMenu] = useState(null);\n\n  const handleContextMenu = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    setContextMenu(\n      contextMenu === null\n        ? { mouseX: e.clientX - 2, mouseY: e.clientY - 4 }\n        : null,\n    );\n  };\n\n  const handleClose = () => {\n    setContextMenu(null);\n  };\n\n  return [contextMenu, handleContextMenu, handleClose];\n};\n","export const CACHE_KEYS = {\n  DIAGRAM: 'diagram',\n  NODES: 'nodes',\n  TRANSITIONS: 'transitions',\n};\n","export const regularNodeStyles = {\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  borderColor: 'grey.500',\r\n  border: 1,\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width: '3em',\r\n  boxSizing: 'border-box',\r\n  height: '3em',\r\n  backgroundColor: 'white',\r\n};\r\n\r\nexport const acceptingNodeStyles = {\r\n  border: '4px double black',\r\n};\r\n\r\nexport const entryNodeStyles = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  boxSizing: 'border-box',\r\n  width: '100px',\r\n  alignItems: 'center',\r\n};\r\n","import React, { useRef } from 'react';\n\nimport { Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport Draggable from 'react-draggable';\nimport { useXarrow } from 'react-xarrows';\n\nimport { ContextMenu } from './ContextMenu';\nimport {\n  entryNodeStyles,\n  acceptingNodeStyles,\n  regularNodeStyles,\n} from '../constants';\n\nconst invisibleNodeStyles = {\n  display: 'flex',\n  margin: '0 24px 0 0',\n};\n\nconst selfNode = {\n  margin: '0 0 48px 48px',\n};\n\nexport const Node = (props) => {\n  const nodeRef = useRef(null);\n  const updateXarrow = useXarrow();\n\n  const handleDrag = (e) => {\n    updateXarrow(e);\n  };\n\n  const handleStop = (e, data) => {\n    updateXarrow(e);\n    props.updateNode(props.index, {\n      ...props.node,\n      position: { x: data.x, y: data.y },\n    });\n  };\n\n  const handleClick = () => {\n    props.onClick();\n  };\n\n  return (\n    <Draggable\n      nodeRef={nodeRef}\n      bounds={'parent'}\n      position={props.node.position}\n      onStop={handleStop}\n      onDrag={handleDrag}\n      onMouseDown={handleClick}\n    >\n      {props.node.isStarting ? (\n        <Box ref={nodeRef} sx={entryNodeStyles}>\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              padding: '0 0 48px',\n            }}\n          >\n            <Box sx={selfNode} id={`self-${props.node?.label}`} />\n            <Box sx={invisibleNodeStyles} id={'entryNode'} />\n            <Box\n              sx={\n                props.node.isAccepting\n                  ? { ...regularNodeStyles, ...acceptingNodeStyles }\n                  : regularNodeStyles\n              }\n              id={props.node.label}\n            >\n              <ContextMenu contextMenuItems={props.contextMenuItems}>\n                <Typography>{props.node.label}</Typography>\n              </ContextMenu>\n            </Box>\n          </Box>\n        </Box>\n      ) : (\n        <Box\n          ref={nodeRef}\n          id={props.node.label}\n          sx={\n            props.node.isAccepting\n              ? { ...regularNodeStyles, ...acceptingNodeStyles }\n              : regularNodeStyles\n          }\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              padding: '0 0 48px',\n            }}\n          >\n            <Box sx={selfNode} id={`self-${props.node?.label}`} />\n            <ContextMenu contextMenuItems={props.contextMenuItems}>\n              <Typography>{props.node.label}</Typography>\n            </ContextMenu>\n          </Box>\n        </Box>\n      )}\n    </Draggable>\n  );\n};\n","import { Box } from '@mui/system';\nimport { useEffect, useRef } from 'react';\nimport { useXarrow } from 'react-xarrows';\nimport { useMousePosition } from '../hooks';\n\nexport const TrackingBox = () => {\n  const mainCursor = useRef(null);\n  const mouse = useMousePosition();\n  const updateXarrow = useXarrow();\n\n  useEffect(() => {\n    updateXarrow();\n    // eslint-disable-next-line\n  }, []);\n\n  const boxStyles = {\n    transform: `translate3d(${mouse.x - 24}px, ${mouse.y - 80}px, 0)`,\n  };\n\n  return <Box id='mouseTracker' ref={mainCursor} sx={boxStyles} />;\n};\n","import { useEffect, useState } from 'react';\n\nexport const useMousePosition = () => {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const setFromEvent = (e) => setPosition({ x: e.clientX, y: e.clientY });\n    window.addEventListener('mousemove', setFromEvent);\n\n    return () => {\n      window.removeEventListener('mousemove', setFromEvent);\n    };\n  }, []);\n\n  return position;\n};\n","import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Backdrop, Typography } from '@mui/material';\nimport { MultipleSelect } from '.';\n\nexport const TransitionModal = (props) => {\n  const [input, setInput] = useState([]);\n\n  const handleSubmit = () => {\n    props.onSubmit?.(props.transition, {\n      ...props.transition,\n      value: input,\n      labels: <Typography bgcolor={'white'}>{input?.join(',')}</Typography>,\n    });\n    setInput([]);\n  };\n\n  const handleClose = () => {\n    props.onClose?.(props.transition);\n    setInput([]);\n  };\n\n  return (\n    <Backdrop open={props.showModal}>\n      <Dialog open={props.showModal} onClose={handleClose}>\n        <DialogTitle>Transition Value</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the value for the transition from {props.transition?.start} to{' '}\n            {props.transition?.end}.\n          </DialogContentText>\n          <MultipleSelect\n            values={props.alphabet}\n            onChange={(values) => setInput(values)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSubmit}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </Backdrop>\n  );\n};\n","import React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport AbcIcon from '@mui/icons-material/Abc';\nimport { ListItemButton } from '@mui/material';\n\nexport const SideBar = (props) => {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <CssBaseline />\n      <AppBar\n        position='fixed'\n        sx={{\n          width: `calc(100% - ${props.drawerWidth}px)`,\n          mr: `${props.drawerWidth}px`,\n        }}\n      >\n        <Toolbar>\n          <Typography variant='h6' noWrap component='div'>\n            {props.title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n      <Box component='main' sx={{ flexGrow: 1, bgcolor: 'background.default' }}>\n        {props.children}\n      </Box>\n      <Drawer\n        sx={{\n          width: props.drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: props.drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant='permanent'\n        anchor='right'\n      >\n        <Toolbar>\n          <Typography variant='h6' noWrap component='div'>\n            Details\n          </Typography>\n        </Toolbar>\n        <Divider />\n        <List>\n          <ListItem key={'Alphabet'}>\n            <ListItemIcon>\n              <AbcIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.alphabet} />\n          </ListItem>\n          <ListItem key={'Type'}>\n            <ListItemButton onClick={props.handlePrettify}>\n              Prettify\n            </ListItemButton>\n            <ListItemText primary={props.type} />\n          </ListItem>\n        </List>\n        <Divider />\n      </Drawer>\n    </Box>\n  );\n};\n","import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport { Backdrop, Stack, Tab, Tabs } from '@mui/material';\nimport { ControlledSwitch } from '.';\n\nexport const AutomatonModal = (props) => {\n  const [mode, setMode] = React.useState(0);\n  const [alphabet, setAlphabet] = useState('a,b');\n  const [nodeCount, setNodeCount] = useState(4);\n  const [transitionCount, setTransitionCount] = useState(0);\n  const [type, setType] = useState('DFA');\n\n  const handleModeChange = (event, newValue) => {\n    setMode(newValue);\n  };\n\n  const handleSubmit = () => {\n    props.onSubmit?.(\n      mode,\n      alphabet?.split(','),\n      type,\n      nodeCount,\n      transitionCount,\n    );\n  };\n\n  const handleTypeChange = (checked) => {\n    setType(checked ? 'NFA' : 'DFA');\n  };\n\n  const DesignMode = ({ index }) => {\n    return (\n      <>\n        {mode === index && (\n          <>\n            <TextField\n              margin='dense'\n              id='alphabet'\n              label='Alphabet'\n              helperText='Use comma separated values 0,1 or a,b etc'\n              type='text'\n              value={alphabet}\n              onInput={(e) => setAlphabet(e.target.value)}\n              variant='standard'\n            />\n            <ControlledSwitch\n              leftText={'DFA'}\n              rightText={'NFA'}\n              onChange={handleTypeChange}\n            />\n          </>\n        )}\n      </>\n    );\n  };\n\n  const GenerateMode = ({ index }) => {\n    return (\n      <>\n        {mode === index && (\n          <Stack direction={'column'} spacing={1}>\n            <TextField\n              margin='dense'\n              id='alphabet'\n              label='Alphabet'\n              helperText='Use comma separated values 0,1 or a,b etc'\n              type='text'\n              value={alphabet}\n              onInput={(e) => setAlphabet(e.target.value)}\n              variant='standard'\n            />\n            <ControlledSwitch\n              leftText={'DFA'}\n              rightText={'NFA'}\n              onChange={handleTypeChange}\n            />\n            <TextField\n              margin='dense'\n              id='node count'\n              label='Number of states'\n              type='number'\n              value={nodeCount}\n              onInput={(e) => setNodeCount(parseInt(e.target.value))}\n              variant='standard'\n            />\n            <TextField\n              margin='dense'\n              id='transition count'\n              label='Number of transitions'\n              type='number'\n              value={transitionCount}\n              onInput={(e) => setTransitionCount(e.target.value)}\n              variant='standard'\n            />\n          </Stack>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <Backdrop open={props.showModal}>\n      <Dialog open={props.showModal}>\n        <DialogContent>\n          <Tabs value={mode} onChange={handleModeChange}>\n            <Tab label='Design' />\n            <Tab label='Generate' />\n          </Tabs>\n          <DesignMode index={0} />\n          <GenerateMode index={1} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </Backdrop>\n  );\n};\n","import React from 'react';\nimport Switch from '@mui/material/Switch';\nimport { Stack, Typography } from '@mui/material';\n\nexport const ControlledSwitch = (props) => {\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n    props.onChange?.(event.target.checked);\n  };\n\n  return (\n    <Stack direction={'row'} spacing={1} alignItems={'center'}>\n      {props.leftText && <Typography>{props.leftText}</Typography>}\n      <Switch checked={checked} onChange={handleChange} />\n      {props.rightText && <Typography>{props.rightText}</Typography>}\n    </Stack>\n  );\n};\n","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst getStyles = (name, personName, theme) => {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n};\n\nexport const MultipleSelect = (props) => {\n  const theme = useTheme();\n  const [value, setValue] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setValue(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n    props.onChange?.(typeof value === 'string' ? value.split(',') : value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id='demo-multiple-name-label'>{props.title}</InputLabel>\n        <Select\n          labelId='demo-multiple-name-label'\n          id='demo-multiple-name'\n          multiple\n          value={value}\n          onChange={handleChange}\n          input={<OutlinedInput label={props.title} />}\n          MenuProps={MenuProps}\n        >\n          {props.values.map((v) => (\n            <MenuItem key={v} value={v} style={getStyles(v, value, theme)}>\n              {v}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n","export class StorageProvider {\n  static setItem = (key, item, local = false) => {\n    const preparedItem = JSON.stringify(item);\n    sessionStorage.setItem(key, preparedItem);\n\n    if (local) {\n      localStorage.setItem(key, preparedItem);\n    }\n  };\n\n  static getItem = (key) => {\n    const item = sessionStorage.getItem(key) || localStorage.getItem(key);\n\n    if (item) {\n      const rawItem = JSON.parse(item);\n      return rawItem;\n    }\n\n    return null;\n  };\n\n  static removeItem = (key) => {\n    sessionStorage.removeItem(key);\n    localStorage.removeItem(key);\n  };\n}\n","import { Typography } from '@mui/material';\n\nconst generateAutomatonSchematic = (nodes, alphabet) => {\n  return nodes.map((n) => {\n    const state = {\n      label: n,\n      isAccepting: false,\n      isStarting: false,\n    };\n\n    for (const a of alphabet) {\n      state[a] = null;\n    }\n\n    return state;\n  });\n};\n\nexport const generateDFA = (nodeCount = 1, alphabet = [], finalCount = 1) => {\n  let unusedNodes = [...Array(nodeCount)?.keys()];\n  const schematic = generateAutomatonSchematic(unusedNodes, alphabet);\n  schematic[0].isStarting = true;\n\n  const startingNode = unusedNodes.shift();\n  let currentNode = startingNode;\n\n  while (unusedNodes.length > 0) {\n    // Generate a random state and symbol\n    const randomStateIndex = Math.floor(Math.random() * unusedNodes.length);\n    const randomSymbolIndex = Math.floor(Math.random() * alphabet.length);\n    const endState = unusedNodes.splice(randomStateIndex, 1)[0];\n    const transitionSymbol = alphabet[randomSymbolIndex];\n    // Retrieve the state and update its transition\n    const currentStateIndex = schematic.findIndex(\n      // eslint-disable-next-line\n      (s) => s.label === currentNode,\n    );\n    schematic[currentStateIndex][transitionSymbol] = endState;\n\n    // Update the current node\n    currentNode = endState;\n  }\n\n  // Now every state has a path to it\n  // Now randomly assign transitions to the remaining symbols for each state\n  const allNodes = [...Array(nodeCount)?.keys()];\n\n  for (let i = 0; i < schematic.length; i++) {\n    for (let j = 0; j < alphabet.length; j++) {\n      const symbol = alphabet[j];\n\n      if (schematic[i][symbol] === null) {\n        const randomStateIndex = Math.floor(Math.random() * allNodes.length);\n        schematic[i][symbol] = allNodes[randomStateIndex];\n      }\n    }\n  }\n\n  // Now all states are fully accounted for, define the final states\n  for (let i = 0; i < finalCount; i++) {\n    const randomStateIndex = Math.floor(Math.random() * allNodes.length);\n    schematic[randomStateIndex].isAccepting = true;\n  }\n\n  return schematic;\n};\n\nexport const parseAutomatonSchematic = (schematic) => {\n  const nodes = [];\n  let transitions = [\n    {\n      start: 'entryNode',\n      end: 'S0',\n    },\n  ];\n  const excludedKeys = ['label', 'isAccepting', 'isStarting'];\n\n  for (let i = 0; i < schematic.length; i++) {\n    const node = schematic[i];\n\n    nodes.push({\n      label: `S${node.label}`,\n      isAccepting: node.isAccepting,\n      isStarting: node.isStarting,\n      position: { x: 0, y: 0 },\n    });\n\n    for (const key in node) {\n      if (\n        Object.hasOwnProperty.call(node, key) &&\n        !excludedKeys.includes(key)\n      ) {\n        const element = node[key];\n        const start = `S${node.label}`;\n        const end = `S${element}`;\n\n        let isDuplicate = false;\n\n        const updatedTransitions = transitions.flatMap((t) => {\n          if (t.start === start && t.end === end) {\n            isDuplicate = true;\n\n            return {\n              ...t,\n              value: [t.value, key],\n              labels: (\n                <Typography bgcolor={'white'}>{`${t.value},${key}`}</Typography>\n              ),\n            };\n          }\n\n          return t;\n        });\n\n        if (isDuplicate) {\n          transitions = updatedTransitions;\n          continue;\n        }\n\n        transitions.push({\n          start,\n          end,\n          value: key,\n          labels: <Typography bgcolor={'white'}>{key}</Typography>,\n        });\n      }\n    }\n  }\n\n  return { nodes, transitions };\n};\n","import React from 'react';\n\nimport { Graphviz } from 'graphviz-react';\n\nexport const GraphVisualisation = (props) => {\n  const generateTransitionString = (transition) => {\n    if (transition.start === 'entryNode') {\n      return '';\n    }\n\n    return `${transition.start} -> ${transition.end} [label = \"${transition.value}\"];`;\n  };\n\n  const generateDotString = () => {\n    let acceptingStates = '';\n\n    for (let node of props.nodes) {\n      if (node.isAccepting) {\n        acceptingStates += ` ${node.label}`;\n      }\n    }\n\n    let dotString = `digraph fsm {\n      rankdir=LR;\n      size=\"8,5\"\n      node [shape = doublecircle];${acceptingStates};\n      node [shape = circle];\n    `;\n\n    for (let transition of props.transitions) {\n      dotString += generateTransitionString(transition);\n    }\n\n    dotString += '}';\n\n    console.log(dotString);\n\n    return dotString;\n  };\n  return <Graphviz dot={generateDotString()} />;\n};\n","import React, { useState } from 'react';\n\nimport { Container, Typography } from '@mui/material';\nimport Xarrow, { Xwrapper } from 'react-xarrows';\n\nimport {\n  Node,\n  ContextMenu,\n  TrackingBox,\n  TransitionModal,\n  SideBar,\n  AutomatonModal,\n} from '../components';\nimport { StorageProvider } from '../providers';\nimport { CACHE_KEYS } from '../constants';\nimport { generateDFA, parseAutomatonSchematic } from '../helpers/automaton';\nimport { GraphVisualisation } from './Graphviz';\n\nconst drawerWidth = 240;\n\nconst playgroundStyles = {\n  height: '100%',\n  width: '100%',\n  minWidth: `calc(100vw - ${drawerWidth}px)`,\n  boxSizing: 'border-box',\n  padding: '24px',\n};\n\nconst arrowStyles = {\n  color: 'black',\n  strokeWidth: 2,\n  path: 'straight',\n};\n\nexport const Playground = (props) => {\n  const [nodes, setNodes] = useState(\n    StorageProvider.getItem(CACHE_KEYS.NODES) || [],\n  );\n  const [transitions, setTransitions] = useState(\n    StorageProvider.getItem(CACHE_KEYS.TRANSITIONS) || [],\n  );\n  const [newTransition, setNewTransition] = useState(null);\n  const [showTransitionModal, setShowTransitionModal] = useState(false);\n  const [automaton, setAutomaton] = useState(null);\n  const [showAutomatonModal, setShowAutomatonModal] = useState(\n    automaton === null,\n  );\n  const [prettify, setPrettify] = useState(false);\n\n  const defineAutomaton = (\n    mode,\n    alphabet,\n    type,\n    nodeCount,\n    transitionCount,\n    finalCount = 1,\n  ) => {\n    const automatonDetails = {\n      mode,\n      alphabet,\n      type,\n      nodeCount,\n      transitionCount,\n      finalCount,\n    };\n\n    setAutomaton(automatonDetails);\n\n    if (mode === 1) {\n      generateAutomaton(automatonDetails);\n      setShowAutomatonModal(false);\n      return;\n    }\n\n    addFirstNode();\n    setShowAutomatonModal(false);\n  };\n\n  const generateAutomaton = (automatonDetails) => {\n    if (automatonDetails.type === 'DFA') {\n      const schematic = generateDFA(\n        automatonDetails.nodeCount,\n        automatonDetails.alphabet,\n        automatonDetails.finalCount,\n      );\n\n      const { nodes, transitions } = parseAutomatonSchematic(schematic);\n      setNodes(nodes);\n      setTransitions(transitions);\n\n      return;\n    }\n  };\n\n  const addFirstNode = () => {\n    const newNode = {\n      label: `S0`,\n      isStarting: true,\n      isAccepting: false,\n      position: { x: 0, y: 0 },\n    };\n\n    const newTransition = {\n      start: 'entryNode',\n      end: `S0`,\n    };\n\n    setNodes([newNode]);\n    setTransitions([newTransition]);\n  };\n\n  const addNodeManually = (e) => {\n    if (nodes.length === 0) {\n      addFirstNode();\n      return;\n    }\n    let searching = true;\n    let newLabel = 0;\n\n    do {\n      let i;\n      for (i = 0; i < nodes.length; i++) {\n        if (nodes[i].label === `S${newLabel}`) {\n          newLabel++;\n          break;\n        }\n      }\n\n      if (i === nodes.length) {\n        searching = false;\n      }\n    } while (searching);\n\n    const newNode = {\n      label: `S${newLabel}`,\n      isAccepting: false,\n      position: { x: 0, y: 0 },\n    };\n\n    setNodes((prevState) => [...prevState, newNode]);\n  };\n\n  const updateNode = (index, node) => {\n    const newNodes = [...nodes];\n    newNodes[index] = node;\n    setNodes(newNodes);\n  };\n\n  const deleteNode = (oldNode) => {\n    const newNodes = nodes.filter((node) => node.label !== oldNode.label);\n\n    if (oldNode.isStarting && nodes.length !== 1) {\n      newNodes[0].isStarting = true;\n      const newTransitions = [...transitions];\n      newTransitions[0].end = newNodes[0].label;\n      setTransitions(newTransitions);\n    }\n\n    const newTransitions = transitions.filter(\n      (t) => t.start !== oldNode.label && t.end !== oldNode.label,\n    );\n\n    setNodes(newNodes);\n    setTransitions(newTransitions);\n  };\n\n  const deleteTransition = (transition) => {\n    const originalTransitions = transitions.filter((t) => t !== transition);\n\n    setTransitions(originalTransitions);\n  };\n\n  const updateTransition = (oldTransition, newTransition) => {\n    const originalTransitions = transitions.filter((t) => t !== oldTransition);\n\n    let duplicate = false;\n    const updatedTransitions = originalTransitions.flatMap((t) => {\n      if (t.start === newTransition.start && t.end === newTransition.end) {\n        duplicate = true;\n\n        return {\n          ...t,\n          value: [t.value, newTransition.value],\n          labels: (\n            <Typography\n              bgcolor={'white'}\n            >{`${t.value},${newTransition.value}`}</Typography>\n          ),\n        };\n      }\n\n      return t;\n    });\n\n    if (duplicate) {\n      setTransitions(updatedTransitions);\n      return;\n    }\n\n    setTransitions([...originalTransitions, newTransition]);\n  };\n\n  const handleNodeClick = (node) => {\n    if (!newTransition) {\n      return;\n    }\n\n    const originalTransitions = transitions.filter(\n      (t) => t.end !== 'mouseTracker',\n    );\n\n    const updatedTransition = transitions[transitions.length - 1];\n    updatedTransition.end = node.label;\n\n    setNewTransition(null);\n    setShowTransitionModal(true);\n    setTransitions([...originalTransitions, updatedTransition]);\n  };\n\n  const startAddingTransition = (node) => {\n    const tempTransition = {\n      start: node.label,\n      end: 'mouseTracker',\n      value: [0],\n    };\n\n    setNewTransition(tempTransition);\n\n    setTransitions((prevState) => [...prevState, tempTransition]);\n  };\n\n  const Grid = () => {\n    const nodeGrid = nodes.map((node, index) => {\n      const typeContextMenuItem = node.isAccepting\n        ? {\n            text: 'Make Non-accepting State',\n            handleClick: () =>\n              updateNode(index, { ...node, isAccepting: false }),\n          }\n        : {\n            text: 'Make Accepting State',\n            handleClick: () =>\n              updateNode(index, { ...node, isAccepting: true }),\n          };\n\n      const nodeContextMenuItems = [\n        typeContextMenuItem,\n        {\n          text: 'Add Transition',\n          handleClick: () => startAddingTransition(node),\n        },\n        {\n          text: 'Delete',\n          handleClick: () => deleteNode(node),\n        },\n      ];\n\n      return (\n        <Node\n          key={`${node.label}-${index}`}\n          updateNode={updateNode}\n          onClick={() => handleNodeClick(node)}\n          contextMenuItems={nodeContextMenuItems}\n          index={index}\n          node={node}\n        />\n      );\n    });\n\n    const transitionGrid = transitions.map((transition, index) => {\n      if (transition.start === transition.end) {\n        return (\n          <>\n            <Xarrow\n              key={`${transition.start}-self-${index}`}\n              start={`self-${transition.start}`}\n              end={transition.end}\n              curveness={0}\n              endAnchor='top'\n              startAnchor='top'\n              {...arrowStyles}\n            />\n            <Xarrow\n              key={`${transition.start}-${transition.end}-${index}`}\n              start={transition.start}\n              labels={transition.labels}\n              curveness={0.3}\n              end={`self-${transition.end}`}\n              startAnchor='right'\n              showHead={false}\n              endAnchor='top'\n              {...arrowStyles}\n            />\n          </>\n        );\n      }\n\n      return (\n        <Xarrow\n          key={`${transition.start}-${transition.end}-${index}`}\n          {...transition}\n          {...arrowStyles}\n        />\n      );\n    });\n\n    return [...nodeGrid, ...transitionGrid];\n  };\n\n  const saveProgress = () => {\n    StorageProvider.setItem(CACHE_KEYS.NODES, nodes, true);\n    StorageProvider.setItem(CACHE_KEYS.TRANSITIONS, transitions, true);\n  };\n\n  const clearCanvas = () => {\n    setTransitions([]);\n    setNodes([]);\n  };\n\n  const contextMenuItems = [\n    {\n      text: 'Add State',\n      handleClick: (e) => addNodeManually(e),\n    },\n    {\n      text: 'Save Progress',\n      handleClick: saveProgress,\n    },\n    {\n      text: 'Clear Canvas',\n      handleClick: clearCanvas,\n    },\n  ];\n\n  return (\n    <SideBar\n      drawerWidth={drawerWidth}\n      title={'Finite Automata Editor'}\n      alphabet={automaton?.alphabet?.join(',')}\n      type={automaton?.type}\n      handlePrettify={() => setPrettify(!prettify)}\n    >\n      {prettify ? (\n        <GraphVisualisation nodes={nodes} transitions={transitions} />\n      ) : (\n        <>\n          <ContextMenu contextMenuItems={contextMenuItems}>\n            <Container sx={playgroundStyles}>\n              <Xwrapper>\n                {newTransition && <TrackingBox />}\n                <Grid />\n              </Xwrapper>\n            </Container>\n          </ContextMenu>\n          <TransitionModal\n            showModal={showTransitionModal}\n            alphabet={automaton?.alphabet}\n            transition={transitions[transitions.length - 1]}\n            onSubmit={(oldT, newT) => {\n              updateTransition(oldT, newT);\n              setShowTransitionModal(false);\n              setNewTransition(null);\n            }}\n            onClose={(t) => {\n              setShowTransitionModal(false);\n              deleteTransition(t);\n              setNewTransition(null);\n            }}\n          />\n          <AutomatonModal\n            showModal={showAutomatonModal}\n            onSubmit={defineAutomaton}\n          />\n        </>\n      )}\n    </SideBar>\n  );\n};\n","import { Box } from '@mui/system';\nimport React from 'react';\nimport { Playground } from './pages';\n\nconst appStyles = {\n  display: 'flex',\n  height: '100%',\n};\n\nexport const App = () => {\n  return (\n    <Box sx={appStyles}>\n      <Playground />\n    </Box>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}